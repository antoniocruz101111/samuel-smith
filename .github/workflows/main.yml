name: release
on:
  push:
    branches:
      - master

jobs:

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
    
    - name: stuffs
      run: |
        # https://developer.github.com/webhooks/#events
        echo "comment: ${{ github.event.commits[0].message }}"
        
    - name: skip check
      if: contains( github.event.commits[0].message, 'skip ci' )
      # good functions and things here: https://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions#functions
      run: |
        echo "exiting, skip ci found"
        exit 1

    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      
    - name: release
      env:
        # I couldn't get the releases to work with the GITHUB_TOKEN so made secrets... :(
        GH_DEPLOY_USER: ${{ secrets.GH_DEPLOY_USER }}
        GH_DEPLOY_KEY: ${{ secrets.GH_DEPLOY_KEY }}
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: |
        # mucho help from https://github.com/elstudio/actions-js-build/blob/v2/commit/entrypoint.sh - thanks!
        branch2="$(echo $GITHUB_REF | awk -F / '{ print $3 }')"
        echo "Branch2: $branch2"
        git config --global user.email "ci@gochain.io"
        git config --global user.name "CI"
        git remote -v
        echo "set origin url"
        git remote set-url origin https://$GH_DEPLOY_USER:$GH_DEPLOY_KEY@github.com/$GITHUB_REPOSITORY.git
        git checkout $branch2
        git branch --set-upstream-to=origin/$branch2 $branch2
        echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
        ./.github/actions-setup.sh
        ./release.sh
        
        
  build-mac:
    name: Build MacOS
    runs-on: macOS-latest
    needs: build-linux
    steps:

    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      
    - name: release
      env:
        # I couldn't get the releases to work with the GITHUB_TOKEN so made secrets... :(
        GH_DEPLOY_USER: ${{ secrets.GH_DEPLOY_USER }}
        GH_DEPLOY_KEY: ${{ secrets.GH_DEPLOY_KEY }}
      run: |
        version=$(git describe --match "v[0-9]*" --abbrev=0 HEAD)
        git checkout $version
        go build -o web3_mac ./cmd/web3
        url='https://api.github.com/repos/gochain/web3/releases'
        output=$(curl $url)
        upload_url=$(echo "$output" | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[0]["upload_url"]' | sed -E "s/\{.*//")
        curl --data-binary "@web3_mac"  -H "Content-Type: application/octet-stream" -u $GH_DEPLOY_USER:$GH_DEPLOY_KEY $upload_url\?name\=web3_mac >/dev/null
        
